version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8u181
      - image: polyglotted/esdocker:5.6.16-1
        environment:
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"
          bootstrap.memory_lock: false
          transport.host: "0.0.0.0"
          cluster.name: "abaci-integration"
    working_directory: ~/es-common
    environment:
      GRADLE_OPTS: -Xmx3200m
      artifact_dir: "artifacts"
    steps:
      - checkout
      - run:
          name: Setup GPG and Gradle Props
          command: |
            sudo apt-get update && sudo apt-get install gettext gnupg2 python3-pip -y && sudo pip3 install awscli
            aws s3 cp s3://artifacts.abaci.co/.gnupg/pgpout.asc ~/private.key
            gpg2 --allow-secret-key-import --import ~/private.key
            gpg2 --export-secret-key ${GPG_KEYID} > secring.gpg
            envsubst < "gradle.properties.tpl" > "gradle.properties"
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run:
          name: Gradle Check
          command: ./gradlew --warning-mode=all -PprojVersion=latest check
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run:
          name: Collect Test Artifacts
          command: |
            mkdir -p ${artifact_dir}/reports/ ${artifact_dir}/output/
            cp -r build/reports ${artifact_dir}/
          when: always
      - store_artifacts:
          path: artifacts

  deploy:
    docker:
      - image: circleci/openjdk:8u181
    working_directory: ~/es-common
    environment:
      GRADLE_OPTS: -Xmx3200m
    steps:
      - checkout
      - run:
          name: Setup GPG and Gradle Props
          command: |
            sudo apt-get update && sudo apt-get install gettext gnupg2 python3-pip -y && sudo pip3 install awscli
            aws s3 cp s3://artifacts.abaci.co/.gnupg/pgpout.asc ~/private.key
            gpg2 --allow-secret-key-import --import ~/private.key
            gpg2 --export-secret-key ${GPG_KEYID} > secring.gpg
            envsubst < "gradle.properties.tpl" > "gradle.properties"
      - run:
          name: Gradle Deploy
          command: |
            ./gradlew --warning-mode=none -PprojVersion=${CIRCLE_TAG:1} uploadArchives

workflows:
  version: 2
  build-n-deploy:
    jobs:
      - build:
          context: org-global
          filters:
            tags:
              only: /.*/
      - deploy:
          context: org-global
          requires:
            - build
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+).*/
            branches:
              ignore: /.*/